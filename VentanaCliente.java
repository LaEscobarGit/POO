package com.mycompany.mavenproject1;

import java.awt.Font;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class VentanaCliente extends javax.swing.JFrame {
    private ListaClientes listaClientes;
    private DatosDelSistema datosSistema;
    private Logo logo;
    private PanelDeAbajo panelAbajo;
    
    public VentanaCliente(DatosDelSistema datosSistema, PanelDeAbajo panelAbajo, Logo logo) {
        initComponents();
        this.listaClientes = new ListaClientes();
        this.datosSistema = datosSistema;
        this.panelAbajo = panelAbajo;
        this.logo = logo;
        setResizable(false);
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        actualizarTablaClient();
    }
    
    public void actualizarTablaClient(){
        DefaultTableModel modelo = (DefaultTableModel) tablaClient.getModel();
        modelo.setRowCount(0);
        
        for (Cliente p : listaClientes.getClientes()){
            modelo.addRow(new Object[]{
                p.getNumero(), p.getNombre(), p.getTelefono(), p.getCorreo()
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clientesPane = new javax.swing.JPanel();
        sub = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        tablaClient = new javax.swing.JTable();
        agregar = new javax.swing.JButton();
        correoLabel = new javax.swing.JLabel();
        correoField = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        telLabel = new javax.swing.JLabel();
        telField = new javax.swing.JTextField();
        buscar1 = new javax.swing.JButton();
        refrescar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        clientesPane.setBackground(new java.awt.Color(255, 255, 255));
        clientesPane.setPreferredSize(new java.awt.Dimension(687, 643));

        sub.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        sub.setText("Buscar clientes");

        tablaClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No. Cliente", "Nombre", "Teléfono", "Correo"
            }
        ));
        scrollPane.setViewportView(tablaClient);

        agregar.setText("Agregar a venta");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        correoLabel.setText("Buscar por correo:");

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        telLabel.setText("Buscar por teléfono:");

        buscar1.setText("Buscar");
        buscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar1ActionPerformed(evt);
            }
        });

        refrescar.setText("Refrescar");
        refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout clientesPaneLayout = new javax.swing.GroupLayout(clientesPane);
        clientesPane.setLayout(clientesPaneLayout);
        clientesPaneLayout.setHorizontalGroup(
            clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientesPaneLayout.createSequentialGroup()
                .addGroup(clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(clientesPaneLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, clientesPaneLayout.createSequentialGroup()
                                        .addComponent(telLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(telField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(73, 73, 73)
                                        .addComponent(buscar1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(refrescar))
                                    .addComponent(scrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(clientesPaneLayout.createSequentialGroup()
                                .addComponent(correoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correoField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(buscar)
                                .addGap(207, 207, 207))))
                    .addGroup(clientesPaneLayout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        clientesPaneLayout.setVerticalGroup(
            clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, clientesPaneLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(sub)
                .addGap(18, 18, 18)
                .addGroup(clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(correoLabel)
                    .addComponent(correoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telLabel)
                    .addComponent(telField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar1)
                    .addComponent(refrescar))
                .addGap(18, 18, 18)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(agregar)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 684, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(clientesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(clientesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        int fila = tablaClient.getSelectedRow();
        if(fila != -1){
            int num = Integer.parseInt(tablaClient.getValueAt(fila, 0).toString());
            Cliente cliente = listaClientes.buscarCliente(num);
            datosSistema.setTxtCliente(cliente);
            logo.setPuntos(cliente);
            panelAbajo.addCliente(cliente);
            JOptionPane.showMessageDialog(null, "Cliente vinculado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona una fila.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_agregarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        if(correoField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Escriba un correo para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }else{
            try{
                String correo = correoField.getText().trim();
                Cliente cliente = null;
                
                String regex = "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@" + "[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$";
                Pattern pattern = Pattern.compile(regex);
                Matcher matcher = pattern.matcher(correo);
                if(!matcher.matches()){
                    throw new Exception();
                }
            
                List<Cliente> lista = listaClientes.getClientes();
                for(Cliente c: lista){
                    if(correo.equals(c.getCorreo())){
                        int num = c.getNumero();
                        cliente = listaClientes.buscarCliente(num);
                        break;
                    }
                }

                DefaultTableModel modelo = (DefaultTableModel) tablaClient.getModel();
                modelo.setRowCount(0);
                if (cliente != null){
                    modelo.addRow(new Object[]{
                        cliente.getNumero(), cliente.getNombre(), cliente.getTelefono(), cliente.getCorreo()
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Cliente no encontrado.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Ingrese un correo válido.", "Advertencia", JOptionPane.WARNING_MESSAGE); 
            }finally{
                correoField.setText("");
            }
        }  
    }//GEN-LAST:event_buscarActionPerformed

    private void buscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar1ActionPerformed
        if(telField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Escriba un teléfono para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }else{
            try{
                long tel = Long.parseLong(telField.getText());
                Cliente cliente = null;
                List<Cliente> lista = listaClientes.getClientes();
                for(Cliente c: lista){
                    if(tel == c.getTelefono()){
                        int num = c.getNumero();
                        cliente = listaClientes.buscarCliente(num);
                        break;
                    }
                }

                DefaultTableModel modelo = (DefaultTableModel) tablaClient.getModel();
                modelo.setRowCount(0);
                if (cliente != null){
                    modelo.addRow(new Object[]{
                        cliente.getNumero(), cliente.getNombre(), cliente.getTelefono(), cliente.getCorreo()
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Cliente no encontrado.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Ingrese un teléfono válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }finally{
                telField.setText(null);
            }
        } 
    }//GEN-LAST:event_buscar1ActionPerformed

    private void refrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescarActionPerformed
        actualizarTablaClient();
    }//GEN-LAST:event_refrescarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton buscar;
    private javax.swing.JButton buscar1;
    private javax.swing.JPanel clientesPane;
    private javax.swing.JTextField correoField;
    private javax.swing.JLabel correoLabel;
    private javax.swing.JButton refrescar;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JLabel sub;
    private javax.swing.JTable tablaClient;
    private javax.swing.JTextField telField;
    private javax.swing.JLabel telLabel;
    // End of variables declaration//GEN-END:variables
}
