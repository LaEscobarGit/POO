package com.mycompany.mavenproject1;
import java.awt.*;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.swing.table.DefaultTableModel;
import java.io.*;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class AdminPanel extends javax.swing.JPanel {
    private CardLayout cardLayout;
    private CardLayout recepcionLayout;
    private Inventario inventario;
    private ManejoCategorias manejoCategorias;
    private ListaClientes listaClientes;
    private List<Lote> lotesActuales;
    
    public AdminPanel(Inventario inventario) {
        this.inventario = inventario;
        this.manejoCategorias = new ManejoCategorias();
        this.lotesActuales = new ArrayList<>();
        initComponents();
        actualizarCombo();
        
        this.listaClientes = new ListaClientes();
        actualizarTablaClient();
        paneles.setLayout(new java.awt.CardLayout());
        recepcionPane.setLayout(new java.awt.CardLayout());

        paneles.add(listaPane, "listaPane");
        paneles.add(inventarioPane, "inventarioPane");
        paneles.add(recepcionPane, "recepcionPane");
        paneles.add(categoriasPane, "categoriasPane");
        paneles.add(clientesPane, "clientesPane");
        
        recepcionPane.add(listaRecepPane, "listaRecepPane");
        recepcionPane.add(manjRecepPane, "manjRecepPane");
        Component[] components = this.getComponents();
        for(Component component : components){
            if(component instanceof JButton){
                ((JButton) component).setUI(new BasicButtonUI());
                ((JButton) component).setFocusPainted(false);
            }
        }
        this.recepcionLayout = (CardLayout) recepcionPane.getLayout();
        this.cardLayout = (CardLayout) paneles.getLayout();
    }
    
    public ManejoCategorias getManejoCategorias(){
        return manejoCategorias;
    }
    
    public void actualizarTabla(){
        DefaultTableModel modelo = (DefaultTableModel) tablaLista.getModel();
        modelo.setRowCount(0);
        
        for (Producto p : inventario.getLista()){
            modelo.addRow(new Object[]{
                p.getId(), p.getNombre(), p.getCategoria(), p.getTipo(), p.getPrecio()
            });
        }
    }
    
    public void actualizarTablaInv(){
        DefaultTableModel modelo = (DefaultTableModel) tablaInv.getModel();
        modelo.setRowCount(0);
        List<Producto> productos = inventario.getLista();
        for (int i=0 ; i < productos.size(); i++){
            Producto p = productos.get(i);
            modelo.addRow(new Object[]{
                p.getId(), p.getNombre(), p.getStockTotal(), p.getStockCaducado(), p.getStockDisponible()
            });
        }
    }
    
    public void actualizarTablaRecep1(){
        DefaultTableModel modelo = (DefaultTableModel) tablaRecep1.getModel();
        modelo.setRowCount(0);
        List<Recepciones> listaRec = Recepciones.cargarLista();
    
        for (Recepciones r : listaRec){
            modelo.addRow(new Object[]{
                r.getFechaIngreso(), r.getReferencia(), r.getProveedor()
            });
        }
    }
    
    public void actualizarTablaRecep3(){//tabla temporal
        DefaultTableModel modelo = (DefaultTableModel) tablaRecep2.getModel();
        modelo.setRowCount(0);
    
        for (Lote lot : lotesActuales){
            modelo.addRow(new Object[]{
                lot.getFechaCaducidad(), lot.getProducto(), lot.getCantidad()
            });
        }
    }
    
    public void actualizarTablaCat(){
        DefaultTableModel modelo = (DefaultTableModel) tablaCat.getModel();
        modelo.setRowCount(0);
        
        for (Categoria p : manejoCategorias.getCategorias()){
            modelo.addRow(new Object[]{
                p.getNombre()
            });
        }
    }
    public void actualizarTablaClient(){
        DefaultTableModel modelo = (DefaultTableModel) tablaClient.getModel();
        modelo.setRowCount(0);
        
        for (Cliente p : listaClientes.getClientes()){
            modelo.addRow(new Object[]{
                p.getNumero(), p.getNombre(), p.getTelefono(), p.getCorreo()
            });
        }
    }
    
    private void actualizarCombo(){
        List<Producto> productos = inventario.getLista();
        DefaultComboBoxModel<Producto> modelo = new DefaultComboBoxModel<>();
        for (Producto p : productos) {
            modelo.addElement(p); 
        }
        prodCombo.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        listaButton = new javax.swing.JButton();
        inventarioButton = new javax.swing.JButton();
        recepcionButton = new javax.swing.JButton();
        categoriasButton = new javax.swing.JButton();
        clientesButton = new javax.swing.JButton();
        paneles = new javax.swing.JPanel();
        listaPane = new javax.swing.JPanel();
        scrollpane = new javax.swing.JScrollPane();
        tablaLista = new javax.swing.JTable();
        paneBuscar = new javax.swing.JPanel();
        buscar = new javax.swing.JButton();
        buscarLabel = new javax.swing.JLabel();
        buscarField = new javax.swing.JTextField();
        refrescar = new javax.swing.JButton();
        paneBotones = new javax.swing.JPanel();
        agregar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        mostrarInfo = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        listaSub = new javax.swing.JLabel();
        inventarioPane = new javax.swing.JPanel();
        scrollpane1 = new javax.swing.JScrollPane();
        tablaInv = new javax.swing.JTable();
        paneBuscar1 = new javax.swing.JPanel();
        buscar1 = new javax.swing.JButton();
        buscarLabel1 = new javax.swing.JLabel();
        buscarField1 = new javax.swing.JTextField();
        refrescar1 = new javax.swing.JButton();
        invSub = new javax.swing.JLabel();
        recepcionPane = new javax.swing.JPanel();
        listaRecepPane = new javax.swing.JPanel();
        listaRecepSub = new javax.swing.JLabel();
        scrollpane6 = new javax.swing.JScrollPane();
        tablaRecep1 = new javax.swing.JTable();
        paneBuscar6 = new javax.swing.JPanel();
        buscar2 = new javax.swing.JButton();
        buscarLabel2 = new javax.swing.JLabel();
        buscarField2 = new javax.swing.JTextField();
        refrescar2 = new javax.swing.JButton();
        paneBotones3 = new javax.swing.JPanel();
        eliminar6 = new javax.swing.JButton();
        agregarLote = new javax.swing.JButton();
        manjRecepPane = new javax.swing.JPanel();
        manjRecepSub = new javax.swing.JLabel();
        scrollpane5 = new javax.swing.JScrollPane();
        tablaRecep2 = new javax.swing.JTable();
        paneBuscar5 = new javax.swing.JPanel();
        provLabel = new javax.swing.JLabel();
        provCombo = new javax.swing.JComboBox<>();
        prodLabel = new javax.swing.JLabel();
        cantLabel = new javax.swing.JLabel();
        fechaLabel = new javax.swing.JLabel();
        prodCombo = new javax.swing.JComboBox<>();
        cantSpinner = new javax.swing.JSpinner();
        dateChooser = new com.toedter.calendar.JDateChooser();
        agregarLista = new javax.swing.JButton();
        paneBotones2 = new javax.swing.JPanel();
        eliminar4 = new javax.swing.JButton();
        guardar4 = new javax.swing.JButton();
        categoriasPane = new javax.swing.JPanel();
        categSub = new javax.swing.JLabel();
        scrollpane3 = new javax.swing.JScrollPane();
        tablaCat = new javax.swing.JTable();
        paneBuscar3 = new javax.swing.JPanel();
        catLabel = new javax.swing.JLabel();
        agregar2 = new javax.swing.JButton();
        catField = new javax.swing.JTextField();
        eliminar3 = new javax.swing.JButton();
        clientesPane = new javax.swing.JPanel();
        recepSub1 = new javax.swing.JLabel();
        scrollpane4 = new javax.swing.JScrollPane();
        tablaClient = new javax.swing.JTable();
        paneBuscar4 = new javax.swing.JPanel();
        numLabel = new javax.swing.JLabel();
        nomLabel = new javax.swing.JLabel();
        telLabel = new javax.swing.JLabel();
        correoLabel = new javax.swing.JLabel();
        agregar3 = new javax.swing.JButton();
        numField = new javax.swing.JTextField();
        nomField = new javax.swing.JTextField();
        telField = new javax.swing.JTextField();
        correoField = new javax.swing.JTextField();
        paneBotones4 = new javax.swing.JPanel();
        eliminar5 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 143, 139));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 600));

        listaButton.setBackground(new java.awt.Color(0, 143, 139));
        listaButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listaButton.setForeground(new java.awt.Color(255, 255, 255));
        listaButton.setText("Lista");
        listaButton.setBorderPainted(false);
        listaButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaButtonActionPerformed(evt);
            }
        });

        inventarioButton.setBackground(new java.awt.Color(0, 143, 139));
        inventarioButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        inventarioButton.setForeground(new java.awt.Color(255, 255, 255));
        inventarioButton.setText("Inventario");
        inventarioButton.setBorderPainted(false);
        inventarioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        inventarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventarioButtonActionPerformed(evt);
            }
        });

        recepcionButton.setBackground(new java.awt.Color(0, 143, 139));
        recepcionButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        recepcionButton.setForeground(new java.awt.Color(255, 255, 255));
        recepcionButton.setText("Recepción");
        recepcionButton.setBorderPainted(false);
        recepcionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        recepcionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recepcionButtonActionPerformed(evt);
            }
        });

        categoriasButton.setBackground(new java.awt.Color(0, 143, 139));
        categoriasButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        categoriasButton.setForeground(new java.awt.Color(255, 255, 255));
        categoriasButton.setText("Categorías");
        categoriasButton.setBorderPainted(false);
        categoriasButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        categoriasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriasButtonActionPerformed(evt);
            }
        });

        clientesButton.setBackground(new java.awt.Color(0, 143, 139));
        clientesButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        clientesButton.setForeground(new java.awt.Color(255, 255, 255));
        clientesButton.setText("Clientes");
        clientesButton.setBorderPainted(false);
        clientesButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        clientesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(categoriasButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(recepcionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inventarioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clientesButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(listaButton)
                .addGap(18, 18, 18)
                .addComponent(inventarioButton)
                .addGap(18, 18, 18)
                .addComponent(recepcionButton)
                .addGap(18, 18, 18)
                .addComponent(categoriasButton)
                .addGap(18, 18, 18)
                .addComponent(clientesButton)
                .addGap(195, 195, 195))
        );

        paneles.setLayout(new java.awt.CardLayout());

        listaPane.setBackground(new java.awt.Color(255, 255, 255));

        tablaLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Categoría", "Tipo", "Precio"
            }
        ));
        scrollpane.setViewportView(tablaLista);

        paneBuscar.setBackground(new java.awt.Color(255, 255, 255));

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        buscarLabel.setText("Buscar por ID: ");

        buscarField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarFieldActionPerformed(evt);
            }
        });

        refrescar.setText("Refrescar");
        refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBuscarLayout = new javax.swing.GroupLayout(paneBuscar);
        paneBuscar.setLayout(paneBuscarLayout);
        paneBuscarLayout.setHorizontalGroup(
            paneBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscarLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(buscarLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscarField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscar)
                .addGap(18, 18, 18)
                .addComponent(refrescar)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        paneBuscarLayout.setVerticalGroup(
            paneBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscarLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(paneBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buscarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscarField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(refrescar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        paneBotones.setBackground(new java.awt.Color(255, 255, 255));

        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        mostrarInfo.setText("Mostrar Info");
        mostrarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarInfoActionPerformed(evt);
            }
        });

        guardar.setBackground(new java.awt.Color(0, 143, 139));
        guardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        guardar.setForeground(new java.awt.Color(255, 255, 255));
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBotonesLayout = new javax.swing.GroupLayout(paneBotones);
        paneBotones.setLayout(paneBotonesLayout);
        paneBotonesLayout.setHorizontalGroup(
            paneBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBotonesLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(agregar)
                .addGap(31, 31, 31)
                .addComponent(modificar)
                .addGap(32, 32, 32)
                .addComponent(eliminar)
                .addGap(32, 32, 32)
                .addComponent(mostrarInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardar)
                .addGap(58, 58, 58))
        );
        paneBotonesLayout.setVerticalGroup(
            paneBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBotonesLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(paneBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(agregar)
                        .addComponent(modificar)
                        .addComponent(eliminar))
                    .addGroup(paneBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mostrarInfo)
                        .addComponent(guardar)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        listaSub.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        listaSub.setText("Lista de medicinas");

        javax.swing.GroupLayout listaPaneLayout = new javax.swing.GroupLayout(listaPane);
        listaPane.setLayout(listaPaneLayout);
        listaPaneLayout.setHorizontalGroup(
            listaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaPaneLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(listaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listaSub, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paneBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paneBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollpane))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        listaPaneLayout.setVerticalGroup(
            listaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaPaneLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(listaSub)
                .addGap(18, 18, 18)
                .addComponent(paneBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        paneles.add(listaPane, "card3");

        inventarioPane.setBackground(new java.awt.Color(255, 255, 255));

        tablaInv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Stock", "Expirados", "Disponibles"
            }
        ));
        scrollpane1.setViewportView(tablaInv);
        if (tablaInv.getColumnModel().getColumnCount() > 0) {
            tablaInv.getColumnModel().getColumn(3).setHeaderValue("Expirados");
            tablaInv.getColumnModel().getColumn(4).setHeaderValue("Disponibles");
        }

        paneBuscar1.setBackground(new java.awt.Color(255, 255, 255));

        buscar1.setText("Buscar");
        buscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar1ActionPerformed(evt);
            }
        });

        buscarLabel1.setText("Buscar por ID: ");

        buscarField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarField1ActionPerformed(evt);
            }
        });

        refrescar1.setText("Refrescar");
        refrescar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBuscar1Layout = new javax.swing.GroupLayout(paneBuscar1);
        paneBuscar1.setLayout(paneBuscar1Layout);
        paneBuscar1Layout.setHorizontalGroup(
            paneBuscar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(buscarLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscarField1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscar1)
                .addGap(18, 18, 18)
                .addComponent(refrescar1)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        paneBuscar1Layout.setVerticalGroup(
            paneBuscar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(paneBuscar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneBuscar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buscarLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscarField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(refrescar1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        invSub.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        invSub.setText("Inventario");

        javax.swing.GroupLayout inventarioPaneLayout = new javax.swing.GroupLayout(inventarioPane);
        inventarioPane.setLayout(inventarioPaneLayout);
        inventarioPaneLayout.setHorizontalGroup(
            inventarioPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventarioPaneLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(inventarioPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(invSub, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paneBuscar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollpane1))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        inventarioPaneLayout.setVerticalGroup(
            inventarioPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inventarioPaneLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(invSub)
                .addGap(18, 18, 18)
                .addComponent(paneBuscar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollpane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        paneles.add(inventarioPane, "card2");

        recepcionPane.setBackground(new java.awt.Color(255, 255, 255));
        recepcionPane.setPreferredSize(new java.awt.Dimension(687, 643));
        recepcionPane.setLayout(new java.awt.CardLayout());

        listaRecepPane.setBackground(new java.awt.Color(255, 255, 255));

        listaRecepSub.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        listaRecepSub.setText("Lista recepción");

        tablaRecep1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fecha", "Referencia", "Proveedor"
            }
        ));
        scrollpane6.setViewportView(tablaRecep1);

        paneBuscar6.setBackground(new java.awt.Color(255, 255, 255));

        buscar2.setText("Buscar");
        buscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar2ActionPerformed(evt);
            }
        });

        buscarLabel2.setText("Buscar por referencia: ");

        buscarField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarField2ActionPerformed(evt);
            }
        });

        refrescar2.setText("Refrescar");
        refrescar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBuscar6Layout = new javax.swing.GroupLayout(paneBuscar6);
        paneBuscar6.setLayout(paneBuscar6Layout);
        paneBuscar6Layout.setHorizontalGroup(
            paneBuscar6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar6Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(buscarLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscarField2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscar2)
                .addGap(47, 47, 47)
                .addComponent(refrescar2)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        paneBuscar6Layout.setVerticalGroup(
            paneBuscar6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar6Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(paneBuscar6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneBuscar6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buscarLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscarField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(refrescar2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        paneBotones3.setBackground(new java.awt.Color(255, 255, 255));

        eliminar6.setText("Eliminar");
        eliminar6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar6ActionPerformed(evt);
            }
        });

        agregarLote.setBackground(new java.awt.Color(0, 143, 139));
        agregarLote.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        agregarLote.setForeground(new java.awt.Color(255, 255, 255));
        agregarLote.setText("Agregar Lote");
        agregarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarLoteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBotones3Layout = new javax.swing.GroupLayout(paneBotones3);
        paneBotones3.setLayout(paneBotones3Layout);
        paneBotones3Layout.setHorizontalGroup(
            paneBotones3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBotones3Layout.createSequentialGroup()
                .addGap(0, 365, Short.MAX_VALUE)
                .addComponent(agregarLote)
                .addGap(72, 72, 72)
                .addComponent(eliminar6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        paneBotones3Layout.setVerticalGroup(
            paneBotones3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBotones3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(paneBotones3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminar6)
                    .addComponent(agregarLote))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout listaRecepPaneLayout = new javax.swing.GroupLayout(listaRecepPane);
        listaRecepPane.setLayout(listaRecepPaneLayout);
        listaRecepPaneLayout.setHorizontalGroup(
            listaRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaRecepPaneLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(listaRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listaRecepSub, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paneBotones3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(listaRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(listaRecepPaneLayout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addGroup(listaRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(paneBuscar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(scrollpane6, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(31, Short.MAX_VALUE)))
        );
        listaRecepPaneLayout.setVerticalGroup(
            listaRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaRecepPaneLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(listaRecepSub)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 461, Short.MAX_VALUE)
                .addComponent(paneBotones3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(listaRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(listaRecepPaneLayout.createSequentialGroup()
                    .addGap(97, 97, 97)
                    .addComponent(paneBuscar6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(scrollpane6, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(122, 122, 122)))
        );

        recepcionPane.add(listaRecepPane, "card2");

        manjRecepPane.setBackground(new java.awt.Color(255, 255, 255));

        manjRecepSub.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        manjRecepSub.setText("Manejar recepción");

        tablaRecep2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Expiración", "Producto", "Cantidad"
            }
        ));
        scrollpane5.setViewportView(tablaRecep2);

        paneBuscar5.setBackground(new java.awt.Color(255, 255, 255));

        provLabel.setText("Proveedor:");

        provCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Proveedor 1", "Proveedor 2", "Proveedor 3", "Proveedor 4" }));

        prodLabel.setText("Producto: ");

        cantLabel.setText("Cantidad: ");

        fechaLabel.setText("Fecha de expiración: ");

        prodCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodComboActionPerformed(evt);
            }
        });

        dateChooser.setDateFormatString("dd-MM-yyyy");

        agregarLista.setText("Agregar a lista");
        agregarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBuscar5Layout = new javax.swing.GroupLayout(paneBuscar5);
        paneBuscar5.setLayout(paneBuscar5Layout);
        paneBuscar5Layout.setHorizontalGroup(
            paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar5Layout.createSequentialGroup()
                .addGroup(paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prodLabel)
                    .addComponent(prodCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cantLabel)
                    .addComponent(cantSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(fechaLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(agregarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(paneBuscar5Layout.createSequentialGroup()
                .addComponent(provLabel)
                .addGap(18, 18, 18)
                .addComponent(provCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        paneBuscar5Layout.setVerticalGroup(
            paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar5Layout.createSequentialGroup()
                .addGroup(paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paneBuscar5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(agregarLista))
                    .addGroup(paneBuscar5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(provLabel)
                            .addComponent(provCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneBuscar5Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(prodLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prodCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paneBuscar5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(paneBuscar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(paneBuscar5Layout.createSequentialGroup()
                                        .addComponent(cantLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cantSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(paneBuscar5Layout.createSequentialGroup()
                                        .addComponent(fechaLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        paneBotones2.setBackground(new java.awt.Color(255, 255, 255));

        eliminar4.setText("Eliminar");
        eliminar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar4ActionPerformed(evt);
            }
        });

        guardar4.setText("Guardar Lotes");
        guardar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBotones2Layout = new javax.swing.GroupLayout(paneBotones2);
        paneBotones2.setLayout(paneBotones2Layout);
        paneBotones2Layout.setHorizontalGroup(
            paneBotones2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBotones2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(eliminar4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112)
                .addComponent(guardar4))
        );
        paneBotones2Layout.setVerticalGroup(
            paneBotones2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBotones2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(paneBotones2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminar4)
                    .addComponent(guardar4))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout manjRecepPaneLayout = new javax.swing.GroupLayout(manjRecepPane);
        manjRecepPane.setLayout(manjRecepPaneLayout);
        manjRecepPaneLayout.setHorizontalGroup(
            manjRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manjRecepPaneLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(manjRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(manjRecepSub, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paneBuscar5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollpane5)
                    .addComponent(paneBotones2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        manjRecepPaneLayout.setVerticalGroup(
            manjRecepPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manjRecepPaneLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(manjRecepSub)
                .addGap(41, 41, 41)
                .addComponent(paneBuscar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollpane5, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(paneBotones2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        recepcionPane.add(manjRecepPane, "card3");

        paneles.add(recepcionPane, "card6");

        categoriasPane.setBackground(new java.awt.Color(255, 255, 255));
        categoriasPane.setPreferredSize(new java.awt.Dimension(687, 643));

        categSub.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        categSub.setText("Manejar categorías");

        tablaCat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Categoría"
            }
        ));
        scrollpane3.setViewportView(tablaCat);

        paneBuscar3.setBackground(new java.awt.Color(255, 255, 255));

        catLabel.setText("Categoría: ");

        agregar2.setBackground(new java.awt.Color(0, 143, 139));
        agregar2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        agregar2.setForeground(new java.awt.Color(255, 255, 255));
        agregar2.setText("Agregar");
        agregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar2ActionPerformed(evt);
            }
        });

        eliminar3.setText("Eliminar");
        eliminar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBuscar3Layout = new javax.swing.GroupLayout(paneBuscar3);
        paneBuscar3.setLayout(paneBuscar3Layout);
        paneBuscar3Layout.setHorizontalGroup(
            paneBuscar3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(paneBuscar3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eliminar3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catLabel)
                    .addComponent(catField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        paneBuscar3Layout.setVerticalGroup(
            paneBuscar3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(catLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(catField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(agregar2)
                .addGap(62, 62, 62)
                .addComponent(eliminar3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout categoriasPaneLayout = new javax.swing.GroupLayout(categoriasPane);
        categoriasPane.setLayout(categoriasPaneLayout);
        categoriasPaneLayout.setHorizontalGroup(
            categoriasPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(categoriasPaneLayout.createSequentialGroup()
                .addGroup(categoriasPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(categoriasPaneLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(categSub, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(344, 344, 344))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, categoriasPaneLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(paneBuscar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(scrollpane3, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        categoriasPaneLayout.setVerticalGroup(
            categoriasPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, categoriasPaneLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(categSub)
                .addGap(18, 18, 18)
                .addGroup(categoriasPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollpane3, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                    .addComponent(paneBuscar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        paneles.add(categoriasPane, "card4");

        clientesPane.setBackground(new java.awt.Color(255, 255, 255));
        clientesPane.setPreferredSize(new java.awt.Dimension(687, 643));

        recepSub1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        recepSub1.setText("Manejar clientes");

        tablaClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No. Cliente", "Nombre", "Teléfono", "Correo"
            }
        ));
        scrollpane4.setViewportView(tablaClient);

        paneBuscar4.setBackground(new java.awt.Color(255, 255, 255));

        numLabel.setText("Número de Cliente: ");

        nomLabel.setText("Nombre: ");

        telLabel.setText("Teléfono: ");

        correoLabel.setText("Correo: ");

        agregar3.setBackground(new java.awt.Color(0, 143, 139));
        agregar3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        agregar3.setForeground(new java.awt.Color(255, 255, 255));
        agregar3.setText("Agregar");
        agregar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBuscar4Layout = new javax.swing.GroupLayout(paneBuscar4);
        paneBuscar4.setLayout(paneBuscar4Layout);
        paneBuscar4Layout.setHorizontalGroup(
            paneBuscar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneBuscar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numField)
                    .addComponent(numLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(paneBuscar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomField)
                    .addComponent(nomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(paneBuscar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(telField)
                    .addComponent(telLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(paneBuscar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(correoField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(correoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(paneBuscar4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(agregar3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        paneBuscar4Layout.setVerticalGroup(
            paneBuscar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBuscar4Layout.createSequentialGroup()
                .addGroup(paneBuscar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneBuscar4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(numLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneBuscar4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(paneBuscar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBuscar4Layout.createSequentialGroup()
                                .addComponent(nomLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paneBuscar4Layout.createSequentialGroup()
                                .addComponent(telLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(telField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paneBuscar4Layout.createSequentialGroup()
                                .addComponent(correoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(agregar3)
                .addGap(18, 18, 18))
        );

        paneBotones4.setBackground(new java.awt.Color(255, 255, 255));

        eliminar5.setText("Eliminar");
        eliminar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBotones4Layout = new javax.swing.GroupLayout(paneBotones4);
        paneBotones4.setLayout(paneBotones4Layout);
        paneBotones4Layout.setHorizontalGroup(
            paneBotones4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBotones4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(eliminar5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        paneBotones4Layout.setVerticalGroup(
            paneBotones4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBotones4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eliminar5)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout clientesPaneLayout = new javax.swing.GroupLayout(clientesPane);
        clientesPane.setLayout(clientesPaneLayout);
        clientesPaneLayout.setHorizontalGroup(
            clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientesPaneLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(recepSub1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paneBuscar4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollpane4, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                    .addComponent(paneBotones4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        clientesPaneLayout.setVerticalGroup(
            clientesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, clientesPaneLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(recepSub1)
                .addGap(18, 18, 18)
                .addComponent(paneBuscar4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollpane4, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(paneBotones4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        paneles.add(clientesPane, "card7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                    .addComponent(paneles, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaButtonActionPerformed
        cardLayout.show(paneles, "listaPane");
        actualizarTabla();
    }//GEN-LAST:event_listaButtonActionPerformed

    private void inventarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventarioButtonActionPerformed
        cardLayout.show(paneles, "inventarioPane");
        actualizarTablaInv();
    }//GEN-LAST:event_inventarioButtonActionPerformed

    private void recepcionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recepcionButtonActionPerformed
        cardLayout.show(paneles, "recepcionPane");
        actualizarCombo();
        actualizarTablaRecep1();
    }//GEN-LAST:event_recepcionButtonActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        if(buscarField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Escriba un ID para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }else{
            try{
                int id = parseInt(buscarField.getText().trim());
                Producto p = inventario.buscarProducto(id);

                DefaultTableModel modelo = (DefaultTableModel) tablaLista.getModel();
                modelo.setRowCount(0);
                if (p != null){
                    modelo.addRow(new Object[]{
                        p.getId(), p.getNombre(), p.getCategoria(), p.getTipo(), p.getPrecio()
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Producto no encontrado.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Ingrese un ID válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }finally{
                buscarField.setText("");
            }
        }  
    }//GEN-LAST:event_buscarActionPerformed

    private void buscarFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarFieldActionPerformed

    private void refrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescarActionPerformed
        actualizarTabla();
    }//GEN-LAST:event_refrescarActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        VentanaAgregarProducto ventana = new VentanaAgregarProducto(inventario, this, manejoCategorias);
        ventana.setVisible(true);
    }//GEN-LAST:event_agregarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        int fila = tablaLista.getSelectedRow();
        if(fila != -1){
            int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas eliminar este producto?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(tablaLista.getValueAt(fila, 0).toString());
                inventario.eliminarProducto(id);
                actualizarTabla();
                JOptionPane.showMessageDialog(null, "Producto eliminado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona una fila.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void mostrarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarInfoActionPerformed
        int fila = tablaLista.getSelectedRow();
        if(fila != -1){
            String mensaje = "Datos del producto:\n";
            int id = Integer.parseInt(tablaLista.getValueAt(fila, 0).toString());
            Producto p = inventario.buscarProducto(id);
            String pre;
            if(p.getPreescripcion()){
                pre = "Si";
            }else{
                pre = "No";
            }
            mensaje = mensaje + "ID: " + Integer.toString(p.getId()) +"\n" + "Nombre: " + p.getNombre() +"\n" + "Categoría: "
            + p.getCategoria().toString() +"\n" + "Tipo: " + p.getTipo().toString() +"\n" + "Medida: " + p.getMedida() +"\n"
            + "Descripción: " + p.getDescripcion() +"\n" + "Precio: " + String.valueOf(p.getPrecio()) +"\n" + "Preescripción: "
            + pre +"\n";
            JOptionPane.showMessageDialog(null, mensaje, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona una fila.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mostrarInfoActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        inventario.guardarInventario(AdminPanel.this);
    }//GEN-LAST:event_guardarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        int fila = tablaLista.getSelectedRow();
        if (fila != -1) {
            int id = Integer.parseInt(tablaLista.getValueAt(fila, 0).toString());
            Producto producto = inventario.buscarProducto(id);
            if (producto != null) {
                new VentanaAgregarProducto(inventario, this, producto, manejoCategorias).setVisible(true);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona una fila.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_modificarActionPerformed

    private void categoriasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriasButtonActionPerformed
        cardLayout.show(paneles, "categoriasPane");
        actualizarTablaCat();
    }//GEN-LAST:event_categoriasButtonActionPerformed

    private void clientesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesButtonActionPerformed
        cardLayout.show(paneles, "clientesPane");
        actualizarTablaClient();
    }//GEN-LAST:event_clientesButtonActionPerformed

    private void buscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar1ActionPerformed
        if(buscarField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Escriba un ID para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }else{
            try{
                int id = parseInt(buscarField.getText().trim());
                Producto p = inventario.buscarProducto(id);

                DefaultTableModel modelo = (DefaultTableModel) tablaInv.getModel();
                modelo.setRowCount(0);
                if (p != null){
                    modelo.addRow(new Object[]{
                        p.getId(), p.getNombre(), p.getStockTotal(), p.getStockCaducado(), p.getStockDisponible()
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Producto no encontrado.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Ingrese un ID válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }finally{
                buscarField.setText("");
            }
        }  
    }//GEN-LAST:event_buscar1ActionPerformed

    private void buscarField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarField1ActionPerformed

    private void refrescar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescar1ActionPerformed
        actualizarTablaInv();
    }//GEN-LAST:event_refrescar1ActionPerformed

    private void eliminar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar3ActionPerformed
        int fila = tablaCat.getSelectedRow();
        if(fila != -1){
            int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas eliminar esta categoria?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                String nombre = tablaCat.getValueAt(fila, 0).toString();
                manejoCategorias.eliminarCategoria(manejoCategorias.buscarCategoria(nombre));
                actualizarTablaCat();
                JOptionPane.showMessageDialog(null, "Categoria eliminada", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona una fila.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_eliminar3ActionPerformed

    private void agregar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar3ActionPerformed
        try{
            int num = Integer.parseInt(numField.getText());
            String nom = nomField.getText();
            long tel = Long.parseLong(telField.getText());
            String correo = correoField.getText();
            
            String regex = "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@" + "[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(correo);
            if(!matcher.matches()){
                throw new Exception();
            }
            
            Cliente c = new Cliente(num, nom, tel, correo);
            listaClientes.agregarCliente(c);

            JOptionPane.showMessageDialog(this,"El cliente ha sido agregado","Mensaje", JOptionPane.INFORMATION_MESSAGE,null);
            if (this != null) {
                actualizarTablaClient();
            }
            numField.setText("");
            nomField.setText("");
            telField.setText("");
            correoField.setText("");
        }catch (Exception e){ 
            /* Si se produce algún tipo de error, se muestra un mensaje */
            JOptionPane.showMessageDialog(null,"Campo nulo o error en formato de numero", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
	}
    }//GEN-LAST:event_agregar3ActionPerformed

    private void agregar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar2ActionPerformed
        try{
            Categoria c = new Categoria(catField.getText());
            manejoCategorias.agregarCategoria(c);

            JOptionPane.showMessageDialog(this,"La categoria ha sido agregada","Mensaje", JOptionPane.INFORMATION_MESSAGE,null);
            if (this != null) {
                actualizarTablaCat();
            }
            catField.setText("");
        }catch (Exception e){ 
            /* Si se produce algún tipo de error, se muestra un mensaje */
            JOptionPane.showMessageDialog(null,"Campo nulo o error en formato de numero", "Error", JOptionPane.ERROR_MESSAGE);
	}
    }//GEN-LAST:event_agregar2ActionPerformed

    private void eliminar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar5ActionPerformed
        int fila = tablaClient.getSelectedRow();
        if(fila != -1){
            int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas eliminar este cliente?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                int num = Integer.parseInt(tablaClient.getValueAt(fila, 0).toString());
                listaClientes.eliminarCliente(listaClientes.buscarCliente(num));
                actualizarTablaClient();
                JOptionPane.showMessageDialog(null, "Cliente eliminado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona una fila.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_eliminar5ActionPerformed

    private void prodComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodComboActionPerformed

    private void agregarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarListaActionPerformed
        try{
            Producto prod = (Producto) prodCombo.getSelectedItem(); //obtener el producto
            int cant = (Integer) cantSpinner.getValue(); //cantidad a agregar
            Date fechaObj = dateChooser.getDate(); //obtener la fecha como Date
            
            if (prod == null || fechaObj == null || cant <= 0) {
                throw new IllegalArgumentException("Datos inválidos");
            }
            
            SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy"); //tomar el formato
            String fechaStr = formato.format(fechaObj); //pasar la fecha a String
            DateTimeFormatter formato2 = DateTimeFormatter.ofPattern("dd-MM-yyyy"); //tomar el formato
            LocalDate fecha = LocalDate.parse(fechaStr, formato2); //pasar la fecha String a LocalDate
            
            lotesActuales.add(new Lote(prod, cant, fecha));
            actualizarTablaRecep3();
            JOptionPane.showMessageDialog(this,"La tanda ha sido agregada","Mensaje", JOptionPane.INFORMATION_MESSAGE,null);
            if (this != null) {
                actualizarTablaRecep3();
            }
            prodCombo.setSelectedIndex(0);
            cantSpinner.setValue(0);
            dateChooser.setDate(null);
        }catch (Exception e){ 
            /* Si se produce algún tipo de error, se muestra un mensaje */
            JOptionPane.showMessageDialog(null,"Campo nulo o error en formato de numero", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
	}
    }//GEN-LAST:event_agregarListaActionPerformed

    private void eliminar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar4ActionPerformed
        int fila = tablaRecep2.getSelectedRow();
        if(fila != -1){
            int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas eliminar este lote?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                lotesActuales.remove(fila);
                actualizarTablaRecep3();
                JOptionPane.showMessageDialog(null, "Lote eliminado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona una fila.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_eliminar4ActionPerformed

    private void buscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar2ActionPerformed
        if(buscarField2.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Escriba una referencia para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }else{
            try{
                int ref = parseInt(buscarField2.getText().trim());
                Recepciones r = Recepciones.buscarPorReferencia(ref);
                
                DefaultTableModel modelo = (DefaultTableModel) tablaRecep1.getModel();
                modelo.setRowCount(0);
                if (r != null){
                    modelo.addRow(new Object[]{
                        r.getFechaIngreso(), r.getReferencia(), r.getProveedor()
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "Recepción no encontrada.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Ingrese una referencia válida.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }finally{
                buscarField2.setText("");
            }
        }  
    }//GEN-LAST:event_buscar2ActionPerformed

    private void buscarField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarField2ActionPerformed

    private void refrescar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescar2ActionPerformed
        actualizarTablaRecep1();
    }//GEN-LAST:event_refrescar2ActionPerformed

    private void eliminar6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar6ActionPerformed
        int fila = tablaRecep1.getSelectedRow();
        if(fila != -1){
            int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas eliminar esta recepción?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                int ref = Integer.parseInt(tablaRecep1.getValueAt(fila, 1).toString());
                Recepciones recepcion = Recepciones.buscarPorReferencia(ref);
                Recepciones.eliminarAdmision(recepcion);
                actualizarTablaRecep1();
                JOptionPane.showMessageDialog(null, "Recepción eliminada", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona una fila.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_eliminar6ActionPerformed

    private void agregarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarLoteActionPerformed
        cardLayout.show(paneles, "recepcionPane");
        recepcionLayout.show(recepcionPane, "manjRecepPane");
    }//GEN-LAST:event_agregarLoteActionPerformed

    private void guardar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar4ActionPerformed
        try{
            int min = 1;
            int max = 999;
            int ref;
            String prov = provCombo.getSelectedItem().toString();
            LocalDate fecha = LocalDate.now();
            do{
                ref = min + (int)(Math.random() * ((max - min) + 1));
            }while(Recepciones.referenciaExiste(ref));
            
            Recepciones recepcion = new Recepciones(ref, prov, fecha);
            for (Lote l : lotesActuales) {
                recepcion.agregarProducto(l);
                l.getProducto().agregarLote(l.getCantidad(),l.getFechaCaducidad());
            }
            Recepciones.agregarAdmision(recepcion);
            lotesActuales.clear();

            JOptionPane.showMessageDialog(this,"El lote ha sido agregado","Mensaje", JOptionPane.INFORMATION_MESSAGE,null);
            actualizarTablaRecep1();
            if (this != null) {
                actualizarTablaRecep3();
            }
            
            provCombo.setSelectedIndex(0);
            prodCombo.setSelectedIndex(0);
            cantSpinner.setValue(0);
            dateChooser.setDate(null);
            cardLayout.show(paneles, "recepcionPane");
            recepcionLayout.show(recepcionPane, "listaRecepPane");
        }catch (Exception e){ 
            /* Si se produce algún tipo de error, se muestra un mensaje */
            JOptionPane.showMessageDialog(null,"Campo nulo o error en formato de numero", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
	}
    }//GEN-LAST:event_guardar4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton agregar2;
    private javax.swing.JButton agregar3;
    private javax.swing.JButton agregarLista;
    private javax.swing.JButton agregarLote;
    private javax.swing.JButton buscar;
    private javax.swing.JButton buscar1;
    private javax.swing.JButton buscar2;
    private javax.swing.JTextField buscarField;
    private javax.swing.JTextField buscarField1;
    private javax.swing.JTextField buscarField2;
    private javax.swing.JLabel buscarLabel;
    private javax.swing.JLabel buscarLabel1;
    private javax.swing.JLabel buscarLabel2;
    private javax.swing.JLabel cantLabel;
    private javax.swing.JSpinner cantSpinner;
    private javax.swing.JTextField catField;
    private javax.swing.JLabel catLabel;
    private javax.swing.JLabel categSub;
    private javax.swing.JButton categoriasButton;
    private javax.swing.JPanel categoriasPane;
    private javax.swing.JButton clientesButton;
    private javax.swing.JPanel clientesPane;
    private javax.swing.JTextField correoField;
    private javax.swing.JLabel correoLabel;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton eliminar3;
    private javax.swing.JButton eliminar4;
    private javax.swing.JButton eliminar5;
    private javax.swing.JButton eliminar6;
    private javax.swing.JLabel fechaLabel;
    private javax.swing.JButton guardar;
    private javax.swing.JButton guardar4;
    private javax.swing.JLabel invSub;
    private javax.swing.JButton inventarioButton;
    private javax.swing.JPanel inventarioPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton listaButton;
    private javax.swing.JPanel listaPane;
    private javax.swing.JPanel listaRecepPane;
    private javax.swing.JLabel listaRecepSub;
    private javax.swing.JLabel listaSub;
    private javax.swing.JPanel manjRecepPane;
    private javax.swing.JLabel manjRecepSub;
    private javax.swing.JButton modificar;
    private javax.swing.JButton mostrarInfo;
    private javax.swing.JTextField nomField;
    private javax.swing.JLabel nomLabel;
    private javax.swing.JTextField numField;
    private javax.swing.JLabel numLabel;
    private javax.swing.JPanel paneBotones;
    private javax.swing.JPanel paneBotones2;
    private javax.swing.JPanel paneBotones3;
    private javax.swing.JPanel paneBotones4;
    private javax.swing.JPanel paneBuscar;
    private javax.swing.JPanel paneBuscar1;
    private javax.swing.JPanel paneBuscar3;
    private javax.swing.JPanel paneBuscar4;
    private javax.swing.JPanel paneBuscar5;
    private javax.swing.JPanel paneBuscar6;
    private javax.swing.JPanel paneles;
    private javax.swing.JComboBox<Producto> prodCombo;
    private javax.swing.JLabel prodLabel;
    private javax.swing.JComboBox<String> provCombo;
    private javax.swing.JLabel provLabel;
    private javax.swing.JLabel recepSub1;
    private javax.swing.JButton recepcionButton;
    private javax.swing.JPanel recepcionPane;
    private javax.swing.JButton refrescar;
    private javax.swing.JButton refrescar1;
    private javax.swing.JButton refrescar2;
    private javax.swing.JScrollPane scrollpane;
    private javax.swing.JScrollPane scrollpane1;
    private javax.swing.JScrollPane scrollpane3;
    private javax.swing.JScrollPane scrollpane4;
    private javax.swing.JScrollPane scrollpane5;
    private javax.swing.JScrollPane scrollpane6;
    private javax.swing.JTable tablaCat;
    private javax.swing.JTable tablaClient;
    private javax.swing.JTable tablaInv;
    private javax.swing.JTable tablaLista;
    private javax.swing.JTable tablaRecep1;
    private javax.swing.JTable tablaRecep2;
    private javax.swing.JTextField telField;
    private javax.swing.JLabel telLabel;
    // End of variables declaration//GEN-END:variables

}
